events {
    worker_connections 1024;
}

http {
    upstream uaida_backend {
        server uaida-backend:8080;
    }

    upstream grafana {
        server uaida-grafana:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Main UAIDA API
    server {
        listen 80;
        server_name localhost;

        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://uaida_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Health check
        location /health {
            proxy_pass http://uaida_backend;
            proxy_set_header Host $host;
            access_log off;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://uaida_backend;
            proxy_set_header Host $host;
            
            # Restrict access to metrics
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }

        # Documentation
        location /docs {
            proxy_pass http://uaida_backend;
            proxy_set_header Host $host;
        }

        # Grafana dashboard
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default redirect to docs
        location = / {
            return 302 /docs;
        }

        # Security
        location ~ /\. {
            deny all;
        }
    }

    # HTTPS server (if SSL certificates are available)
    server {
        listen 443 ssl http2;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Same configuration as HTTP server
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://uaida_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            proxy_pass http://uaida_backend;
            access_log off;
        }

        location /metrics {
            proxy_pass http://uaida_backend;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }

        location /docs {
            proxy_pass http://uaida_backend;
        }

        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
        }

        location = / {
            return 302 /docs;
        }
    }
}