apiVersion: v1
kind: ConfigMap
metadata:
  name: uaida-config
  namespace: uaida-production
data:
  # Database configuration
  POSTGRES_DB: "uaida_prod"
  POSTGRES_USER: "uaida"
  
  # Server configuration
  PORT: "3001"
  HOST: "0.0.0.0"
  RUST_LOG: "info"
  
  # CORS configuration
  CORS_ORIGINS: "https://yourdomain.com,https://www.yourdomain.com"
  
  # Frontend configuration
  REACT_APP_API_URL: "https://api.yourdomain.com"
  
  # Feature flags
  ENABLE_REGISTRATION: "true"
  ENABLE_PASSWORD_RESET: "true"
  ENABLE_EMAIL_VERIFICATION: "false"
  ENABLE_ANALYTICS: "true"
  ENABLE_MONITORING: "true"
  
  # Rate limiting
  RATE_LIMIT_REQUESTS_PER_MINUTE: "60"
  RATE_LIMIT_BURST: "10"
  
  # Performance
  MAX_CONNECTIONS: "100"
  WORKER_PROCESSES: "auto"
  KEEPALIVE_TIMEOUT: "65"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: uaida-production
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        client_max_body_size 10M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
        
        # Upstream services
        upstream backend {
            server uaida-backend-service:3001;
        }
        
        upstream frontend {
            server uaida-frontend-service:80;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            
            # API routes
            location /api/ {
                rewrite ^/api/(.*) /$1 break;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                limit_req zone=api burst=20 nodelay;
            }
            
            # Auth endpoints with stricter rate limiting
            location ~ ^/api/(auth|register|login) {
                rewrite ^/api/(.*) /$1 break;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                limit_req zone=login burst=5 nodelay;
            }
            
            # Health check
            location /health {
                proxy_pass http://backend/health;
                access_log off;
            }
            
            # Frontend
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }